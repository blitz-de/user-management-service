#JWT Authentication Logs
log_format jwt '$remote_addr - $remote_user [$time_local] "$request" '
               '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
               '$jwt_header_alg $jwt_claim_uid $jwt_claim_url';

#Global Rate Limit set
limit_req_zone $remote_addr zone=perip:1m rate=1r/s;

upstream user_api {
    zone api_endpoints 64k;
	#Load Balancing back-end APIs
    server userapp:8002;
    server reviewapp:8003;
	sticky cookie srv_id expires=1h;
}

server {

    listen 80;
    # create user
    location /api/v1/auth/users/ {
    proxy_pass http://user_api;

    #Rate-Limit applied as below
    limit_req zone=perip nodelay;
    limit_req_status 429;

    }
    # user activation
    location /api/v1/auth/users/activation/ {
    proxy_pass http://user_api;

    #Rate-Limit applied as below
    limit_req zone=perip nodelay;
    limit_req_status 429;

    }

    # Log in
    location /api/v1/auth/jwt/create/ {
    proxy_pass http://user_api;
    #Rate-Limit applied as below
    limit_req zone=perip nodelay;
    limit_req_status 429;

    }

#     location ~ /api/f1/[12][0-9]+ {
#     proxy_pass http://f1-api;
#
#     }



    location = /reviews  {

# Configuring JWT Authentication
    auth_jwt on;
    auth_jwt_key_file api_secret.jwk;

# JWT Authentication Logs
access_log  /var/log/nginx/jwt.access.log jwt;

# Configuring JWT Autorization

    if ( $jwt_claim_uid = 222 ) {
        add_header X-jwt-claim-uid "$jwt_claim_uid" always;
        add_header X-jwt-status "Redirected to Backend-API" always;

            proxy_pass http://user_api;
    }

    if ( $jwt_claim_uid != 222 ) {
        add_header X-jwt-claim-uid "$jwt_claim_uid" always;
        add_header X-jwt-status "Invalid user, no redirect" always;
          return 403 "Forbidden: You don't have access to this resource!";
        }


    }
}